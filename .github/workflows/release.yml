name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'
        cache: 'maven'
    
    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
    
    - name: Update version in pom.xml
      run: mvn versions:set -DnewVersion=${{ steps.get_version.outputs.VERSION }} -DgenerateBackupPoms=false
    
    - name: Build project
      run: mvn clean package -DskipTests
    
    - name: Run tests
      run: mvn test -DskipITs
    
    - name: Generate changelog
      id: changelog
      uses: metcalfc/changelog-generator@v4.3.1
      with:
        myToken: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        body: |
          ## Changes in this Release
          ${{ steps.changelog.outputs.changelog }}
          
          ## Installation
          
          ### Maven
          ```xml
          <dependency>
              <groupId>org.springframework.data</groupId>
              <artifactId>spring-data-orientdb</artifactId>
              <version>${{ steps.get_version.outputs.VERSION }}</version>
          </dependency>
          ```
          
          ### Gradle
          ```gradle
          implementation 'org.springframework.data:spring-data-orientdb:${{ steps.get_version.outputs.VERSION }}'
          ```
        draft: false
        prerelease: false
    
    - name: Upload JAR to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/spring-data-orientdb-${{ steps.get_version.outputs.VERSION }}.jar
        asset_name: spring-data-orientdb-${{ steps.get_version.outputs.VERSION }}.jar
        asset_content_type: application/java-archive
    
    - name: Upload Sources JAR to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/spring-data-orientdb-${{ steps.get_version.outputs.VERSION }}-sources.jar
        asset_name: spring-data-orientdb-${{ steps.get_version.outputs.VERSION }}-sources.jar
        asset_content_type: application/java-archive
    
    - name: Upload Javadoc JAR to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/spring-data-orientdb-${{ steps.get_version.outputs.VERSION }}-javadoc.jar
        asset_name: spring-data-orientdb-${{ steps.get_version.outputs.VERSION }}-javadoc.jar
        asset_content_type: application/java-archive

  publish-github-packages:
    name: Publish to GitHub Packages
    runs-on: ubuntu-latest
    needs: release
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'
        cache: 'maven'
    
    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
    
    - name: Update version in pom.xml
      run: mvn versions:set -DnewVersion=${{ steps.get_version.outputs.VERSION }} -DgenerateBackupPoms=false
    
    - name: Publish to GitHub Packages
      run: mvn --batch-mode deploy -DskipTests
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Uncomment this job if you want to publish to Maven Central
  # publish-maven-central:
  #   name: Publish to Maven Central
  #   runs-on: ubuntu-latest
  #   needs: release
  #   
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #   
  #   - name: Set up JDK 17
  #     uses: actions/setup-java@v4
  #     with:
  #       java-version: 17
  #       distribution: 'temurin'
  #       cache: 'maven'
  #       server-id: ossrh
  #       server-username: MAVEN_USERNAME
  #       server-password: MAVEN_PASSWORD
  #       gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
  #       gpg-passphrase: MAVEN_GPG_PASSPHRASE
  #   
  #   - name: Extract version from tag
  #     id: get_version
  #     run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
  #   
  #   - name: Update version in pom.xml
  #     run: mvn versions:set -DnewVersion=${{ steps.get_version.outputs.VERSION }} -DgenerateBackupPoms=false
  #   
  #   - name: Publish to Maven Central
  #     run: mvn --batch-mode deploy -P release -DskipTests
  #     env:
  #       MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
  #       MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
  #       MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

